" Vundle - Start
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" Plugins
"Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-fugitive'

"Plugin 'scrooloose/syntastic'
"Plugin 'titlecase.vim'

"Plugin 'scrooloose/nerdtree'

" :Dox command generates stub for doxygen doc in C++, etc
Plugin 'vim-scripts/DoxygenToolkit.vim'

Plugin 'plasticboy/vim-markdown'

" All my theme Plugins
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'flazz/vim-colorschemes'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" Vundle - End

" Set colourscheme
set term=screen-256color
colorscheme PaperColor
set bg=dark

" Show a vertical colum at 80
highlight ColorColumn ctermbg=black
set colorcolumn=80

" Remove annying bells
set belloff=all

" Sets line Numbers
set number 
set relativenumber

set paste		" Fixes indent while pasting
set mouse=a		" Enables to change pointer via mouse click
syntax on 		" Sets syntax Highlighting
set title		" Shows file title

set tabstop=8		" Tabs are 8 spaces long
set softtabstop=8	" Tabs are 8 spaces long
set shiftwidth=8	" Tabs are 8 spaces long
set noexpandtab		" Tabs are 8 spaces long

" Groups all project files into one
augroup project
  autocmd!
  autocmd BufRead,BufNewFile *.h,*.c set filetype=c.doxygen
augroup END

" Helps me change Vim Tabs easily
nnoremap <C-Left> :tabprevious<CR>                                                                            
nnoremap <C-Right> :tabnext<CR>
nnoremap <C-j> :tabprevious<CR>                                                                            
nnoremap <C-k> :tabnext<CR>

" In insert or command mode, move normally by using Ctrl
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
cnoremap <C-h> <Left>
cnoremap <C-j> <Down>
cnoremap <C-k> <Up>
cnoremap <C-l> <Right>

" Helps me add stuff to the buffer

map ,cc o/* */<ESC>
map ,dcc o/** */<ESC>

"Airline
let g:airline_theme='tomorrow'
let g:airline_powerline_fonts = 1

 if !exists('g:airline_symbols')
    let g:airline_symbols = {}
 endif

"unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'
" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''
